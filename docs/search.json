[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This document was published at image.jpg.\n\nEtiam eu suspendisse aliquam, suscipit augue, nulla auctor. Quis est litora ut aenean vulputate in aliquam nec massa lorem mus rhoncus. Bibendum hendrerit, a varius sed cubilia facilisis pellentesque. Nec commodo semper, malesuada malesuada in id sed. A pellentesque sed ac metus pellentesque. Sit sed eros vitae praesent duis facilisis. Non leo maecenas amet posuere semper sed semper elementum.\nPharetra eu est potenti eu. Semper tellus taciti sociosqu, sem est dui bibendum. Convallis vestibulum magnis velit, consequat sapien dis fusce, taciti luctus. Nec nec dapibus vel vulputate. Sed diam nulla, aptent posuere. At porttitor adipiscing sociis magna mus neque. Ullamcorper ac, et tempus, vel. Libero morbi ac amet rhoncus pellentesque lacus. Proin habitant venenatis netus luctus nunc sed dapibus. Fusce, posuere sapien et fusce fermentum nec sit sapien, imperdiet. In nullam curabitur at aliquet tristique pellentesque. Quis parturient lacinia duis eros sagittis maecenas imperdiet. Purus vivamus maecenas ut a. Ligula eros sapien ex ex nec sed eu sociosqu nascetur.\n\n\nWe know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\):\n\\[\n\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\n\\]\nThis is a post with executable code.11 ajdpiajdipa js\nSee Xie (2016).\n\nXie, Yihui. 2016. Bookdown: Authoring Books and Technical Documents with R Markdown. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/bookdown.\n\n1 + 1\n\n[1] 2\n\n\nLorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.\n\n1+1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Slides",
    "section": "",
    "text": "title\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 7, 2023\n\n\nChoCho\n\n\n\n\n\n\n\n\ntitle\n\n\n\n\n\n\n\n\n\n\n\n\nJan 16, 2023\n\n\nChoCho\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Archives",
    "section": "",
    "text": "Add to class 函數裝飾\n\n\n\n\n\n\n\ndecorator\n\n\nPython\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2023\n\n\nChoCho\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunction Plot\n\n\n\n\n\n\n\nObservable JS\n\n\n\n\n\n\n\n\n\n\n\nJan 20, 2023\n\n\nChoCho\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 16, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "slides/slide-test2.html#modified",
    "href": "slides/slide-test2.html#modified",
    "title": "title",
    "section": "MODIFIED",
    "text": "MODIFIED"
  },
  {
    "objectID": "slides/slide-test2.html#yrsdf",
    "href": "slides/slide-test2.html#yrsdf",
    "title": "title",
    "section": "YRSdf",
    "text": "YRSdf\nLorem ipsum dolor sit amet, officia excepteur ex fugiat reprehenderit enim labore culpa sint ad nisi Lorem pariatur mollit ex esse exercitation amet. Nisi animcupidatat excepteur officia. Reprehenderit nostrud nostrud ipsum Lorem est aliquip amet voluptate voluptate dolor minim nulla est proident. Nostrud officia pariatur ut officia. Sit irure elit esse ea nulla sunt ex occaecat reprehenderit commodo officia dolor Lorem duis laboris cupidatat officia voluptate. Culpa proident adipisicing id nulla nisi laboris ex in Lorem sunt duis officia eiusmod. Aliqua reprehenderit commodo ex non excepteur duis sunt velit enim. Voluptate laboris sint cupidatat ullamco ut ea consectetur et est culpa et culpa duis."
  },
  {
    "objectID": "slides/slide-test1.html#section",
    "href": "slides/slide-test1.html#section",
    "title": "title",
    "section": "222",
    "text": "222\nLorem ipsum dolor sit amet, officia excepteur ex fugiat reprehenderit enim labore culpa sint ad nisi Lorem pariatur mollit ex esse exercitation amet. Nisi animcupidatat excepteur officia. Reprehenderit nostrud nostrud ipsum Lorem est aliquip amet voluptate voluptate dolor minim nulla est proident. Nostrud officia pariatur ut officia. Sit irure elit esse ea nulla sunt ex occaecat reprehenderit commodo officia dolor Lorem duis laboris cupidatat officia voluptate. Culpa proident adipisicing id nulla nisi laboris ex in Lorem sunt duis officia eiusmod. Aliqua reprehenderit commodo ex non excepteur duis sunt velit enim. Voluptate laboris sint cupidatat ullamco ut ea consectetur et est culpa et culpa duis."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog."
  },
  {
    "objectID": "slides/slide-test1.html#title",
    "href": "slides/slide-test1.html#title",
    "title": "title",
    "section": "title",
    "text": "title"
  },
  {
    "objectID": "slides/slide-test1.html#modified",
    "href": "slides/slide-test1.html#modified",
    "title": "title",
    "section": "MODIFIED",
    "text": "MODIFIED"
  },
  {
    "objectID": "posts/observable-JS/ojs.html",
    "href": "posts/observable-JS/ojs.html",
    "title": "Function Plot",
    "section": "",
    "text": "See https://quarto.org/docs/interactive/ojs/.\nSee https://observablehq.com/@mauriciopoppe/function-plot.\n\nfunctionPlot = require(\"function-plot@1.22.2/dist/function-plot\")\n\n\n\n\n\n\n\n{\n  let target = DOM.element('div')\n  functionPlot({\n    title: 'y = x²',\n    data: [{\n      fn: 'x^2'\n    }],\n    target\n  });\n  return target\n}\n\n\n\n\n\n\n\ntargetA = {\n  let target = DOM.element('div')\n  return target\n}\ntargetB = {\n  let target = DOM.element('div')\n  return target\n}\njoinTargets = {\n  let a = functionPlot({\n    target: targetA,\n    xAxis: { domain: [-6, 6] },\n    yAxis: { domain: [-6, 6] },\n    annotations: [\n      {\n        y: 1,\n        text: 'max'\n      },\n      {\n        y: -1,\n        text: 'min'\n      }\n    ],\n    data: [\n      {\n        // fn: '(x^3) / 3 - 2 * x * x + 3 * x + 2',\n        fn: 'sin(x)',\n        graphType: 'polyline',\n        derivative: {\n          // fn: '2 * x * x - 4 * x + 3',\n          fn: 'cos(x)',\n          updateOnMouseMove: true\n        }\n      }\n    ]\n  })\n  let b = functionPlot({\n    target: targetB,\n    xAxis: { domain: [-4, 8] },\n    yAxis: { domain: [-4, 8] },\n    annotations: [\n      {\n        x: 1,\n        text: 'intercept'\n      },\n      {\n        x: 3,\n        text: 'intercept'\n      }\n    ],\n    data: [\n      {\n        fn: 'x * x - 4 * x + 3',\n        graphType: 'polyline'\n      }\n    ]\n  })\n  a.addLink(b)\n  b.addLink(a)\n  return \"targets joined!\"\n}"
  },
  {
    "objectID": "posts/decorator.html",
    "href": "posts/decorator.html",
    "title": "Add to class 函數裝飾",
    "section": "",
    "text": "取自 https://d2l.ai/chapter_linear-regression/oo-design.html#utilities.\nSee https://www.runoob.com/w3cnote/python-func-decorators.html.\n重要準則:\n@f\ndef g():\n  ...\n等價於\ng = f(g)"
  },
  {
    "objectID": "posts/decorator.html#add-to-class-函數裝飾",
    "href": "posts/decorator.html#add-to-class-函數裝飾",
    "title": "Python 函數裝飾器",
    "section": "Add to class 函數裝飾",
    "text": "Add to class 函數裝飾\n\n使用方式\n定義如下的 add_to_class.\n\ndef add_to_class(Class):\n  def wrapper(obj):\n    setattr(Class, obj.__name__, obj)\n  return wrapper\n\n假如我們有一個 class A, 且有個 method double.\n\nclass A:\n  def double(self,t):\n    return 2*t\n\n令 a 為 A 的 instance.\n\na = A()\n\n則我們可以呼叫 a.double(3).\n\na.double(3)\n\n6\n\n\n現在假如我們想修改 A 的 method double, 可用如下.\n\n@add_to_class(A)\ndef double(self,t):\n  return 7*t\n\n則可以發現: 不需重新令 a 是 A 的 instance, a 的 double 都已經變更.\n\na.double(3)\n\n21\n\n\n\n# 另一個 A 的 instance\naa = A()\naa.double(3)\n\n21\n\n\n\n\n解析 code\n再回顧 add_to_class 為\ndef add_to_class(Class):\n  def wrapper(obj):\n    setattr(Class, obj.__name__, obj)\n  return wrapper\n且\n@add_to_class(A)\ndef double(self,t):\n  return 7*t\n等價於 double = add_to_class(A)(double).\n所以有執行了 add_to_class(A)(double)1 這指令.1 注意這裡 add_to_class(A) 不 是 class, 而是 wrapper.\n所以有執行 setattr(Class, obj.__name__, obj), 其中 Class = A, obj = double.\n所以相當於執行了 setattr(A, double, 7*t)23.2 這裡的 obj.__name__ 相當於 obj 的名字. 在這就是 double.3 這裡 setattr(Class, obj.__name__, obj) 的第三分量 obj 相當於 double return 的東西, 所以就是 7*t."
  },
  {
    "objectID": "posts/decorator.html#使用方式",
    "href": "posts/decorator.html#使用方式",
    "title": "Add to class 函數裝飾",
    "section": "使用方式",
    "text": "使用方式\n定義如下的 add_to_class.\n\ndef add_to_class(Class):\n  def wrapper(obj):\n    setattr(Class, obj.__name__, obj)\n  return wrapper\n\n假如我們有一個 class A, 且有個 method double.\n\nclass A:\n  def double(self,t):\n    return 2*t\n\n令 a 為 A 的 instance.\n\na = A()\n\n則我們可以呼叫 a.double(3).\n\na.double(3)\n\n6\n\n\n現在假如我們想修改 A 的 method double, 可用如下.\n\n@add_to_class(A)\ndef double(self,t):\n  return 7*t\n\n則可以發現: 不需重新令 a 是 A 的 instance, a 的 double 都已經變更.\n\na.double(3)\n\n21\n\n\n\n# 另一個 A 的 instance\naa = A()\naa.double(3)\n\n21"
  },
  {
    "objectID": "posts/decorator.html#解析-code",
    "href": "posts/decorator.html#解析-code",
    "title": "Add to class 函數裝飾",
    "section": "解析 code",
    "text": "解析 code\n回顧 add_to_class 為\ndef add_to_class(Class):\n  def wrapper(obj):\n    setattr(Class, obj.__name__, obj)\n  return wrapper\n且\n@add_to_class(A)\ndef double(self,t):\n  return 7*t\n等價於 double = add_to_class(A)(double).\n\n\n\n\n\n\nImportant\n\n\n\n這裡會令 double 為 add_to_class(A)(double). 所以要注意不會覆蓋到舊有的變數. 可以單獨執行 double 會發現不報錯 (不會 return 任何東西).\n\ndouble, type(double)\n\n(None, NoneType)\n\n\n\n\n所以有執行了 add_to_class(A)(double)1 這指令.1 這裡 add_to_class(A) 不 是 class, 而是 wrapper.\n所以有執行 setattr(Class, obj.__name__, obj), 其中 Class = A, obj = double.\n所以相當於執行了 setattr(A, double, 7*t)23.2 這裡的 obj.__name__ 相當於 obj 的名字. 在這就是 double.3 這裡 setattr(Class, obj.__name__, obj) 的第三分量 obj 相當於 double return 的東西, 所以就是 7*t.\n\n\nTODO:\n\nhttps://www.runoob.com/w3cnote/python-func-decorators.html"
  },
  {
    "objectID": "temp/downloadthis.html",
    "href": "temp/downloadthis.html",
    "title": "Downloadthis Example",
    "section": "",
    "text": "Download \n Download the mtcars data \n Download the pdf"
  },
  {
    "objectID": "downloadthis.html",
    "href": "downloadthis.html",
    "title": "Downloadthis Example",
    "section": "",
    "text": "Download"
  },
  {
    "objectID": "posts/downloadthis.html",
    "href": "posts/downloadthis.html",
    "title": "Downloadthis Example",
    "section": "",
    "text": "Download"
  },
  {
    "objectID": "slides/slide-test1.html#downloadthis",
    "href": "slides/slide-test1.html#downloadthis",
    "title": "title",
    "section": "downloadthis",
    "text": "downloadthis"
  },
  {
    "objectID": "temp/lordicon.html",
    "href": "temp/lordicon.html",
    "title": "Lordicon Quarto Extension",
    "section": "",
    "text": "This extension allows you to use lordicon icons in your Quarto HTML documents.\n\nShortcodes\nThe {{< li >}} shortcode renders an icon (specified by its code) after downloading it the lordicon CDN. The {{< lif >}} shortcode renders an icon (specified by its filepath) from a local .json file. Both shortcodes support the same arguments for customization, described below.\n\n\n\n\n\n\n\n\nPseudocode\nExample Code\nRendered\n\n\n\n\n{{< li code >}}\n{{< li wlpxtupd >}}\n\n\n\n{{< lif file >}}\n{{< lif church.json >}}\n\n\n\n\n\n\nTriggers\ntrigger controls the icon’s animation type. When using the loop or loop-on-hover triggers, you can also set an optional delay (in ms) between loops.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li wxnxiano >}}\n\n\n\n{{< li wxnxiano trigger=click >}}\n\n\n\n{{< li wxnxiano trigger=hover >}}\n\n\n\n{{< li wxnxiano trigger=loop >}}\n\n\n\n{{< li wxnxiano trigger=loop delay=1000 >}}\n\n\n\n{{< li wxnxiano trigger=loop-on-hover >}}\n\n\n\n{{< li wxnxiano trigger=loop-on-hover delay=1000 >}}\n\n\n\n{{< li wxnxiano trigger=morph >}}\n\n\n\n{{< li wxnxiano trigger=boomerang >}}\n\n\n\n\n\n\nSpeed\nspeed controls how quickly the icon’s animation plays.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li lupuorrc trigger=loop speed=0.5 >}}\n\n\n\n{{< li lupuorrc trigger=loop speed=1.0 >}}\n\n\n\n{{< li lupuorrc trigger=loop speed=2.0 >}}\n\n\n\n\n\n\nColors\ncolors controls the icon’s coloring. Outline icons typically have just a primary and secondary color, but flat and lineal icons can have many more. Each color should be given in rank:color format (where ranks are primary, secondary, tertiary, etc.) and multiple colors should be separated by commas. Colors can be given in HTML color names or hexcodes.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li lupuorrc >}}\n\n\n\n{{< li lupuorrc colors=primary:gold >}}\n\n\n\n{{< li lupuorrc colors=primary:gray,secondary:orange >}}\n\n\n\n{{< li lupuorrc colors=primary:#4030e8,secondary:#ee66aa >}}\n\n\n\n\n\n\nStroke\nstroke controls how thick the lines in an icon are.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li lupuorrc stroke=50 >}}\n\n\n\n{{< li lupuorrc stroke=100 >}}\n\n\n\n{{< li lupuorrc stroke=150 >}}\n\n\n\n\n\n\nScale\nscale controls how large or zoomed in the icon is.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li lupuorrc scale=25 >}}\n\n\n\n{{< li lupuorrc scale=50 >}}\n\n\n\n{{< li lupuorrc scale=100 >}}\n\n\n\n\n\n\nAxis X\nx controls the horizontal position of the center of the icon.\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li lupuorrc x=25 >}}\n\n\n\n{{< li lupuorrc x=50 >}}\n\n\n\n{{< li lupuorrc x=100 >}}\n\n\n\n\n\n\nAxis Y\ny controls the vertical position of the center of the icon.\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< li lupuorrc y=25 >}}\n\n\n\n{{< li lupuorrc y=50 >}}\n\n\n\n{{< li lupuorrc y=100 >}}"
  },
  {
    "objectID": "temp/social-embeds.html",
    "href": "temp/social-embeds.html",
    "title": "Social-embeds",
    "section": "",
    "text": "https://quarto-social-embeds.sellorm.com/examples/gists.html"
  }
]